from sparv import lexical_classes

_blingbring_model = "%s/blingbring.pickle" % sparv_model_dir
_blingbring_freq_model = "%s/blingbring.freq.gp2008+suc3+romi.pickle" % sparv_model_dir
_blingbring_class_set = "bring"
_swefn_model = "%s/swefn.pickle" % sparv_model_dir
_swefn_freq_model = "%s/swefn.freq.gp2008+suc3+romi.pickle" % sparv_model_dir
_lexical_pos_limit = "NN VB JJ AB"
_blingbring_cutoff = 3
_swefn_cutoff = 3

rule _token_blingbring:
    "Do blingbring lexical class annotation per token for {file}."
    input:
        saldo = "{file}.token.%s" % _saldo_ids,
        pos = "{file}.token.pos",
        model = _blingbring_model
    output:
        "{file}.token.blingbring"
    run:
        lexical_classes.annotate_bb_words(
            out=output[0],
            saldoids=input.saldo,
            pos=input.pos,
            model=input.model,
            class_set=_blingbring_class_set,
            pos_limit=_lexical_pos_limit
        )

rule token_blingbring:
    "Do blingbring lexical class annotation per token for all files."
    input:
        expand("%s/{file}.token.blingbring" % annotation_dir, file=input_files)


rule _token_swefn:
    "Do sweFN lexical class annotation per token for {file}."
    input:
        saldo = "{file}.token.%s" % _saldo_ids,
        pos = "{file}.token.pos",
        model = _swefn_model
    output:
        "{file}.token.swefn"
    run:
        lexical_classes.annotate_swefn_words(
            out=output[0],
            saldoids=input.saldo,
            pos=input.pos,
            model=input.model,
            pos_limit=_lexical_pos_limit
        )

rule token_swefn:
    "Do sweFN lexical class annotation per token for all files."
    input:
        expand("%s/{file}.token.swefn" % annotation_dir, file=input_files)


rule _text_blingbring:
    "Do blingbring annotation per text for {file}."
    input:
        saldo = "{file}.token.%s" % _saldo_ids,
        model = _blingbring_freq_model,
        token_annotation = "{file}.token.blingbring",
        TEXT = "{file}.@TEXT",
        text = "{file}.text",
        token = "{file}.token"
    output:
        "{file}.text.blingbring"
    run:
        lexical_classes.annotate_doc(
            out=output[0],
            saldoids=input.saldo,
            in_token_annotation=input.token_annotation,
            text=input.text,
            TEXT=input.TEXT,
            token=input.token,
            freq_model=input.model,
            cutoff=_blingbring_cutoff
        )

rule text_blingbring:
    "Do blingbring lexical class annotation per text for all files."
    input:
        expand("%s/{file}.text.blingbring" % annotation_dir, file=input_files)


rule _text_swefn:
    "Do sweFN lexical class annotation per text for {file}."
    input:
        saldo = "{file}.token.%s" % _saldo_ids,
        model = _swefn_freq_model,
        token_annotation = "{file}.token.swefn",
        TEXT = "{file}.@TEXT",
        text = "{file}.text",
        token = "{file}.token"
    output:
        "{file}.text.swefn"
    run:
        lexical_classes.annotate_doc(
            out=output[0],
            saldoids=input.saldo,
            in_token_annotation=input.token_annotation,
            text=input.text,
            TEXT=input.TEXT,
            token=input.token,
            freq_model=input.model,
            cutoff=_swefn_cutoff
        )

rule text_swefn:
    "Do sweFN lexical class annotation per text for all files."
    input:
        expand("%s/{file}.text.swefn" % annotation_dir, file=input_files)
